<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<context:component-scan base-package="com.demo.service"></context:component-scan>

	<context:property-placeholder location="classpath:spring/db.properties"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${mysql.driver}"></property>
		<property name="jdbcUrl" value="${mysql.url}"></property>
		<property name="user" value="${mysql.user}"></property>
		<property name="password" value="${mysql.password}"></property>
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="${minPoolSize}"></property>
		<!--连接池中保留的最大连接数-->
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<!--初始化时获取的连接数-->
		<property name="initialPoolSize" value="${maxPoolSize}"></property>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
		<property name="maxIdleTime" value="${maxIdleTime}"></property>
		 <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		 <property name="acquireIncrement" value="${acquireIncrement}"></property>
	</bean>
	
	<!-- 配置redis-->
	<!-- redis连接池 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port}"/>
	</bean>
	
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.demo.model"></property>
		 <property name="mapperLocations" value="classpath:mapper/*.xml"></property> 
	</bean>
	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.demo.mapper"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置事务通知 -->
	<tx:advice transaction-manager="transactionManager" id="myadvice">
		<tx:attributes>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			
			<tx:method name="add*" isolation="READ_COMMITTED" rollback-for="Exception"/>
			<tx:method name="save*" isolation="READ_COMMITTED" rollback-for="Exception"/>
			<tx:method name="update*" isolation="READ_COMMITTED" rollback-for="Exception"/>
			<tx:method name="delete*" isolation="READ_COMMITTED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.demo.service.*.*(..))" id="mypointcut"/>
		<aop:advisor advice-ref="myadvice" pointcut-ref="mypointcut"/>
	</aop:config>
	

	
</beans>
